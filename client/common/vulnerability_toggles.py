#!/usr/bin/env python3
"""
Utilities to describe persona vulnerability profiles.
"""

from __future__ import annotations

from dataclasses import dataclass
from typing import Dict


@dataclass
class VulnerabilityProfile:
    name: str
    weak_tls: bool = False
    weak_creds: bool = False
    legacy_cipher: bool = False
    known_cve: bool = False
    attack_mode: bool = False

    def to_metadata(self) -> Dict[str, str]:
        flags = {
            "weak_tls": str(self.weak_tls).lower(),
            "weak_creds": str(self.weak_creds).lower(),
            "legacy_cipher": str(self.legacy_cipher).lower(),
            "known_cve": str(self.known_cve).lower(),
            "attack_mode": str(self.attack_mode).lower(),
        }
        return {"vulnerability_profile": self.name, **flags}


DEFAULT_PROFILES: Dict[str, VulnerabilityProfile] = {
    "none": VulnerabilityProfile(name="none"),
    "weak-tls": VulnerabilityProfile(name="weak-tls", weak_tls=True),
    "old-ciphers": VulnerabilityProfile(name="old-ciphers", weak_tls=True, legacy_cipher=True),
    "weak-creds": VulnerabilityProfile(name="weak-creds", weak_creds=True),
    "cve-sim": VulnerabilityProfile(name="cve-sim", attack_mode=True, known_cve=True, weak_creds=True),
}


def get_profile(name: str) -> VulnerabilityProfile:
    return DEFAULT_PROFILES.get(name, DEFAULT_PROFILES["none"])
